datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    
  image         String?
  accounts      Account[]
  sessions      Session[]
  notes         Note[]

  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Note {
  id        String   @id @default(cuid()) // Unique identifier for the note
  title     String   // The title of the uploaded file
  content   String   // The generated content (text from the file)
  createdAt DateTime @default(now()) // Timestamp for when the note was created
  updatedAt DateTime @updatedAt // Timestamp for when the note was last updated
  userId    String   // Foreign key to the user profile (via profileId)
  
  user      User     @relation(fields: [userId], references: [id])
}


model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}


